{"version":3,"sources":["serviceWorker.js","Header.js","Footer.js","HomeComp/Home.js","HomeComp/Idrott.js","Login/login.component.js","components/Component.DataTableComponent.js","index.js","RegForm/RegForm.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Header","className","style","backgroundImage","height","opacity","expand","fluid","aria-controls","aria-expanded","aria-label","fas","icon","id","right","active","href","Component","Footer","backgroundcolor","backgroundColor","Date","getFullYear","Home","variant","note","noteColor","Idrott","small","align","scope","listUnStyled","Login","type","placeholder","htmlFor","DataTableComponent","props","isLoaded","posts","fetch","response","json","result","setState","data","this","map","post","ownData","sizes","parents","name","lag","address","zip","myPhone","myEmail","shirt","shorts","socks","momsName","momsPhone","momsMail","dadsName","dadsPhone","dadsMail","routing","exact","path","component","React","useState","givenFormData","formData","setFormData","submitted","setSubmitted","marginLeft","marginRight","schema","givenSchema","uiSchema","givenUISchema","onChange","onSubmit","value","callback","JSON","stringify","method","headers","body","push","to","pathname","onCancel","submitOnEnter","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.01304a14.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA§§a\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}","import React, {Component} from 'react';\nimport {\n    MDBContainer,\n    MDBIcon,\n    MDBNavbar,\n    MDBNavbarItem,\n    MDBNavbarLink,\n    MDBNavbarNav,\n    MDBNavbarToggler\n} from \"mdb-react-ui-kit\";\n\nclass Header extends Component {\n    componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <header>\n                <div\n                    className='p-5 text-left bg-image'\n                    style={{\n                        backgroundImage: \"url('https://i.postimg.cc/RVsNK02p/banner.png')\",\n                        height: 100,\n                        opacity: \"0.4\"\n                    }}\n                />\n                <MDBNavbar className=\"fixed-top\" expand='lg'>\n                    <MDBContainer fluid>\n                        <MDBNavbarToggler\n                            aria-controls='navbarExample01'\n                            aria-expanded='false'\n                            aria-label='Toggle navigation'>\n                            <MDBIcon fas icon='bars'/>\n                        </MDBNavbarToggler>\n                        <div className='collapse navbar-collapse' id='navbarExample01'>\n                            <MDBNavbarNav right className='mb-2 mb-lg-0'>\n                                <MDBNavbarItem active>\n                                    <MDBNavbarLink href='/home/'>\n                                        Hem\n                                    </MDBNavbarLink>\n                                </MDBNavbarItem>\n                                <MDBNavbarItem>\n                                    <MDBNavbarLink href='/Ungdomar/'>Ungdomsidrott</MDBNavbarLink>\n                                </MDBNavbarItem>\n                                <MDBNavbarItem>\n                                    <MDBNavbarLink href='/reg/'>Anmälan</MDBNavbarLink>\n                                </MDBNavbarItem>\n                                <MDBNavbarItem>\n                                    <MDBNavbarLink href='/admin/'>Admin</MDBNavbarLink>\n                                </MDBNavbarItem>\n                                <MDBNavbarItem>\n                                    <MDBNavbarLink href='/dataTable/'>Rapport</MDBNavbarLink>\n                                </MDBNavbarItem>\n                            </MDBNavbarNav>\n                        </div>\n                    </MDBContainer>\n                </MDBNavbar>\n            </header>\n        );\n    }\n}\n\nexport default Header;","import {MDBFooter} from \"mdb-react-ui-kit\";\nimport React from \"react\";\nfunction Footer() {\n    return (\n        <MDBFooter backgroundcolor='light' className='text-center text-lg-left'>\n            <div className='text-center p-3' style={{backgroundColor: 'rgba(0, 0, 0, 0.2)'}}>\n                &copy; {new Date().getFullYear()} Copyright:{' '}\n                <a className='text-dark' href='https://mickenet.com/'>\n                    mickenet.com\n                </a>\n            </div>\n        </MDBFooter>\n    );\n}\nexport default Footer;","import React, {Component} from 'react';\nimport {\n    MDBContainer,\n    MDBTypography\n} from \"mdb-react-ui-kit\";\n\nclass Home extends Component {\n    componentDidMount() {\n    }\n\n    render() {\n        return (\n                <body>\n                <MDBContainer>\n                    <MDBTypography variant='h5'>Mål och Vision</MDBTypography>\n\n                    <MDBTypography note noteColor='primary'>\n                        Smygehuk FF ska stå för glädje, kamratskap och ett bra ledarskap, därför skall föreningen vara det självklara valet när man vill spela fotboll.\n                        Verksamhetens målsättning är att kunna försörja vår junior- och seniortrupp med egna produkter med Mål och Vision hög kompetens och som är\n                        goda förebilder. Målet är också att bredda vår ungdomsverksamhet i antalet aktiva och att ha verksamhet för alla åldersgrupper från 3-19 år\n                        samt bredda vår verksamhet så fotboll finns för alla som vill träna.\n                    </MDBTypography>\n                    <MDBTypography variant='h5'>Strategi</MDBTypography>\n                    <MDBTypography note noteColor='primary'>\n                        Vidareutveckla kompetensen på våra ledare både genom intern- och extern ledareutbildning och genom Ökat samarbete mellan lagen.\n                        Ny spelare i föreningen får prova på att träna 3 ggr innan man behöver betala medlemsavgift.\n                        Ej betald medlemsavgift innebär att man inte får spela match. När spelaren har bestämt sig för att bli medlem i föreningen, lämnas talongen till ansvarig ledare, som lämnar vidare till kansliet.\n                        Sverigelotterna gäller/medlem får inte lämnas tillbaka till föreningen.\n                        Någon form av Bingolotter till jul kan man ej köpa sig fri ifrån.\n                    </MDBTypography>\n                </MDBContainer>\n                </body>\n        );\n    }\n}\nexport default Home;","import React, {Component} from 'react';\nimport {\n     MDBContainer,\n    MDBTable,\n    MDBTableBody,\n    MDBTableHead,\n    MDBTypography\n} from \"mdb-react-ui-kit\";\n\nclass Idrott extends Component {\n    componentDidMount() {\n\n    }\n\n    render() {\n        return (\n                <body>\n                <MDBContainer>\n                            <MDBTypography variant='h5'>Medlems och träningsavgifter 2021</MDBTypography>\n                            <MDBTable small align=\"middle\">\n                                <MDBTableHead>\n                                    <th scope='col'>#</th>\n                                    <th scope='col'>13-19 år\n                                        (9/11-mannafotboll)</th>\n                                    <th scope='col'> 10—12 år\n                                        (7-manna fotboll)</th>\n                                    <th scope='col'> 8 — 9 år\n                                        (5-manna fotboll)</th>\n                                    <th scope='col'>6 — 7 år\n                                        (3-manna fotboll)</th>\n                                    <th scope='col'>4-5 år\n                                        (Boll o Lek)</th>\n                                    <th scope='col'>Funktionsvariationer\n                                        (aktiviteter)</th>\n                                </MDBTableHead>\n                                <MDBTableBody>\n                                    <tr>\n                                        <th scope='row'>1</th>\n                                        <td>250kr + 1050kr = 1300kr</td>\n                                        <td>250kr + 850kr = 1100kr</td>\n                                        <td>250kr + 700kr = 950kr</td>\n                                        <td>250kr + 400kr = 650kr</td>\n                                        <td>400kr</td>\n                                        <td>400kr</td>\n                                    </tr>\n                                </MDBTableBody>\n                            </MDBTable>\n                            <MDBTypography note noteColor='primary'>\n                                Exkl. lottförsäljning.\n                                Börjar man i föreningen innan den 30/6 betalas full medlems- och träningsavgift.\n                                Börjar man efter 30/6 så betalar man full medlemsavgift men halv träningsavgift t.o.m. 30/9.\n                                Efter den 1/10 betalar man bara medlemsavgiften.\n                            </MDBTypography>\n                            <MDBTypography variant='h6'>Vad ingår i medlems och träningsavgiften?</MDBTypography>\n                            <MDBTypography listUnStyled className='mb-0'>\n                                <ul>\n                                    <li>Folksams idrottsförsäkring.</li>\n                                    <li>Träning 1-3 ggr/vecka med utbildade ledare.</li>\n                                    <li> Seriespel med utbildade domare, för 9-19 åringar.</li>\n                                    <li> Cupspel 2-6 ggr per år, för 6-19 åringar.</li>\n                                    <li>Träningsset (tröja, shorts, strumpor) ingår i full medlems- och träningsavgift för 6-16\n                                        åringar</li>\n                                    <li>Tröja/shorts storlekar: 110/120, 130/140, 150/160, S, M, L, XL</li>\n                                    <li> Strumpor storlekar: 31-33, 34-36, 37-39, 40-42, 43-45</li>\n                                    <li>Verksamhetsanpassad utrustning för sin åldersgrupp.</li>\n                                    <li>Säsongsavslutning med priser/medaljer.</li>\n                                </ul>\n                            </MDBTypography>\n\n\n                </MDBContainer>\n                </body>\n        );\n    }\n}\nexport default Idrott;","import React, { Component } from \"react\";\nimport '../App.css';\nexport default class Login extends Component {\n\n    render() {\n        return (\n            <form className = \"form-box\">\n\n                <h3>Log in</h3>\n\n                <div className=\"form-group\">\n                    <label>Email</label>\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\n                </div>\n\n                <div className=\"form-group \">\n                    <label>Password</label>\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\n                </div>\n\n                <div className=\"form-group logincss\">\n                    <div className=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\n                    </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">Sign in</button>\n                <p className=\"forgot-password text-right\">\n                    Forgot <a href=\"/\">password?</a>\n                </p>\n            </form>\n        );\n    }\n}","import React, { Component } from 'react';\nimport './table.css';\n\nexport class DataTableComponent extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            error : null,\n            isLoaded : false,\n            posts :[]\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://xmie-ot-data.mdbgo.io/api/registrations\")\n            .then( response => response.json())\n            .then(\n                // handle the result\n                (result) => {\n                    this.setState({\n                        isLoaded : true,\n                        posts : result.data\n                    });\n                },\n\n                // Handle error\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    })\n                },\n            )\n    }\n    render() {\n        const {error, isLoaded, posts} = this.state;\n\n        if(error){\n            return <div>Error in loading</div>\n        }else if (!isLoaded) {\n            return <div>Loading ...</div>\n        }else{\n            return(\n                <div>\n                    <ol>\n                        {\n                            posts.map(post => (\n                                post.ownData.map( ownData =>(\n                                    post.sizes.map( sizes =>(\n                                        post.parents.map( parents =>(\n                                <li key={post.id} align=\"start\">\n                                    <div>\n                                        <p className=\"title\">{ownData.name}</p>\n                                        <table id =\"ownd\" className=\"table\">\n                                            <caption>Storlekar</caption>\n                                            <tr>\n                                                <th>Åldersgrupp</th>\n                                                <th>Adress</th>\n                                                <th>Postnummer</th>\n                                                <th>Telefon</th>\n                                                <th>email</th>\n                                            </tr>\n                                            <tr>\n                                                <td>{ownData.lag}</td>\n                                                <td>{ownData.address}</td>\n                                                <td>{ownData.zip}</td>\n                                                <td>{ownData.myPhone}</td>\n                                                <td>{ownData.myEmail}</td>\n                                            </tr>\n                                        </table>\n                                        <table id =\"size\" className=\"table\">\n                                            <caption>Föräldrar</caption>\n                                            <tr>\n                                            <th>Tröja</th>\n                                                <th>Shorts</th>\n                                                <th>Strumpor</th>\n                                            </tr>\n                                            <tr>\n                                                <td>{sizes.shirt}</td>\n                                                <td>{sizes.shorts}</td>\n                                                <td>{sizes.socks}</td>\n                                            </tr>\n                                        </table>\n                                        <table id =\"mamma\" className=\"table\">\n                                            <tr>\n                                                <th>Mamma</th>\n                                                <th>TelefonNr</th>\n                                                <th>Email</th>\n                                            </tr>\n                                            <tr>\n                                                <td>{parents.momsName}</td>\n                                                <td>{parents.momsPhone}</td>\n                                                <td>{parents.momsMail}</td>\n                                            </tr>\n                                        </table>\n                                        <table id =\"pappa\" className=\"table\">\n\n                                            <tr>\n                                                <th>Pappa</th>\n                                                <th>TelefonNr</th>\n                                                <th>Email</th>\n                                            </tr>\n                                            <tr>\n                                                <td>{parents.dadsName}</td>\n                                                <td>{parents.dadsPhone}</td>\n                                                <td>{parents.dadsMail}</td>\n                                            </tr>\n                                        </table>\n\n                                    </div>\n                                </li>\n                                        ))  ))\n                                ))\n                            ))\n                        }\n                    </ol>\n                </div>\n            );\n        }\n    }\n}\nexport default DataTableComponent","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css'\nimport * as serviceWorker from './serviceWorker';\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Header from './Header';\nimport Footer from './Footer';\nimport Home from \"./HomeComp/Home\";\nimport Idrott from \"./HomeComp/Idrott\";\nimport Reg from \"./RegForm/RegForm\";\nimport Login from \"./Login/login.component\";\nimport DataTableComponent from \"./components/Component.DataTableComponent\";\n\nconst routing = (\n    <Router>\n        <div>\n            <Header />\n            <hr />\n            <Switch>\n                <Route exact path=\"/\" component={Home}/>\n                <Route exact path=\"/Home/\" component={Home}/>\n                <Route exact path=\"/Ungdomar/\" component={Idrott}/>\n                <Route exact path=\"/reg/\" component={Reg}/>\n                <Route exact path=\"/admin/\" component={Login}/>\n                <Route path=\"/dataTable/\" component={DataTableComponent} />\n            </Switch>\n            <Footer />\n        </div>\n    </Router>\n);\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();","// @ts-ignore\nimport React, {useState} from 'react';\nimport MaterialJsonSchemaForm from \"@rjsf/material-ui\";\nimport  { Redirect} from \"react-router-dom\";\n// Internals\nimport givenSchema from '../schemas/form.json';\nimport givenUISchema from '../schemas/ui-schema.json';\nimport givenFormData from '../schemas/form-data.json';\n\n\nexport default function RegForm() {\n    const [formData, setFormData] = React.useState(givenFormData);\n    const [submitted, setSubmitted] = useState(false);\n    const divStyle = {\n        marginLeft: '10%',\n        marginRight: '40%',\n    };\n\n    const onSubmit = (value, callback) => {\n\n        var json = JSON.stringify(formData);\n        const url = 'https://xmie-ot-data.mdbgo.io/api/registration'\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: json\n        };\n        fetch(url, requestOptions)\n            .then(response =>{\n                setSubmitted(true)\n                return response.json()\n            } )\n            .catch(error => console.log('Form submit error', error))\n        if (submitted) {\n            return <Redirect push to={{\n                pathname: '/'\n            }}\n            />\n        }\n    }\n    const onCancel = () => {\n        console.log('on reset being called');\n    }\n\n    const onFormChanged = ({ formData }) => setFormData(formData);\n\n    return (\n\n    <div style={divStyle}>\n        <MaterialJsonSchemaForm\n            // Define Schema\n            schema={givenSchema}\n            uiSchema={givenUISchema}\n          //  xhrSchema={givenXhrSchema || {}}\n            formData={formData}\n            // Define Event handlers\n            onChange={onFormChanged}\n            onSubmit={onSubmit}\n            // Every Prop below is optional - every prop above this line is required\n            onCancel={onCancel} /* optional */\n\n            /* Optional Prop to auto submit form on press of enter */\n            submitOnEnter\n        /></div>\n    );\n}\n"],"sourceRoot":""}